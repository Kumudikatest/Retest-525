{
  "EDITOR_STATE": {
    "allProjectFiles": {
      "4bd90596-63db-44f5-9daa-6e28065ada5c": {
        "id": "4bd90596-63db-44f5-9daa-6e28065ada5c",
        "parent": null,
        "name": "Retest-525",
        "type": "DIRECTORY",
        "isDirectory": true,
        "children": [
          "8c99b139-4fc3-4a16-8854-bb19f7977274",
          "ff4cf730-a051-4e36-b5df-0fdc0624f30b",
          "9d5e4f2f-992b-4e3c-8e15-43f2529f2bb6"
        ],
        "isRemovable": false,
        "filePath": "Retest-525"
      },
      "8c99b139-4fc3-4a16-8854-bb19f7977274": {
        "id": "8c99b139-4fc3-4a16-8854-bb19f7977274",
        "parent": "4bd90596-63db-44f5-9daa-6e28065ada5c",
        "name": "lambda.js",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "Retest-525/lambda.js",
        "code": "let AWS = require('aws-sdk');\nlet google = require('googleapis').google;\nlet _auth = require('./Authorizer');\nconst datastore = google.datastore('v1');\nconst cognito_idp = new AWS.CognitoIdentityServiceProvider();\nconst sns = new AWS.SNS();\n\nexports.handler = function (event, context, callback) {\n    sns.listSubscriptionsByTopic({\n        TopicArn: 'arn:aws:sns:us-east-1:318300609668:dynamodb'\n    }).promise()\n        .then(data => {\n            // your code goes here\n        })\n        .catch(err => {\n            // error handling goes here\n        });\n    cognito_idp.listUsers({\n        UserPoolId: \"us-east-1_D10y3fy0o\",\n        Limit: \"10\"\n    }, function (error, data) {\n        if (error) {\n            // implement error handling logic here\n            throw error;\n        }\n        // your logic goes within this block\n    });\n    datastore.projects.beginTransaction({\n        projectId: process.env.GCP_PROJECT,\n        resource: {\n            transactionOptions: {\n                readWrite: {}\n            }\n        }\n    }).then(response => {\n        console.log(response.data);           // successful response\n        /*\n        response.data = {\n            \"transaction\": \"<transaction ID>\"\n        }\n        */\n    })\n        .catch(err => {\n            console.log(err, err.stack); // an error occurred\n        });\n\n\n    callback(null, { \"message\": \"Successfully executed\" });\n}",
        "triggers": [],
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        },
        "testCases": {
          "000105ed-8662-43d4-8c4c-23dc56dd38fa": {
            "id": "000105ed-8662-43d4-8c4c-23dc56dd38fa",
            "name": "Unnamed event",
            "functionId": "8c99b139-4fc3-4a16-8854-bb19f7977274",
            "event": "{\n    \"key1\": \"value1\",\n    \"key2\": \"value2\",\n    \"key3\": \"value3\"\n}"
          }
        }
      },
      "ff4cf730-a051-4e36-b5df-0fdc0624f30b": {
        "id": "ff4cf730-a051-4e36-b5df-0fdc0624f30b",
        "parent": "4bd90596-63db-44f5-9daa-6e28065ada5c",
        "name": "ConnectionManager.js",
        "type": "JS_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "Retest-525/ConnectionManager.js",
        "code": "module.exports = function() {\n    this.dbConnections = [];\n\n    this.dbConnections[\"authdatabase\"] = {\n        host: \"authdatabase.czndmdv7dw6d.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"rdsuser\",\n        password: process.env.Password_rdsAuthdatabase,\n        database: \"authDatabase\"\n    };\n};",
        "triggers": []
      },
      "9d5e4f2f-992b-4e3c-8e15-43f2529f2bb6": {
        "id": "9d5e4f2f-992b-4e3c-8e15-43f2529f2bb6",
        "parent": "4bd90596-63db-44f5-9daa-6e28065ada5c",
        "name": "Authorizer.js",
        "type": "JS_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "Retest-525/Authorizer.js",
        "code": "const google = require(\"googleapis\").google;\n\nconst key = JSON.parse(process.env.GCP_SERVICE_ACCOUNT_KEY);\nconst jwtClient = new google.auth.JWT({\n    email: key.client_email,\n    key: key.private_key,\n    scopes: [\"https://www.googleapis.com/auth/cloud-platform\"]\n});\n\ngoogle.options({auth: jwtClient, project: process.env.GCP_PROJECT});",
        "triggers": []
      }
    },
    "deletedFiles": [],
    "rootNode": "4bd90596-63db-44f5-9daa-6e28065ada5c",
    "openFiles": [
      "8c99b139-4fc3-4a16-8854-bb19f7977274"
    ],
    "currentFileId": "8c99b139-4fc3-4a16-8854-bb19f7977274",
    "resources": {
      "rds-authdatabase": {
        "name": "rds-authdatabase",
        "type": "RDS",
        "config": {
          "editMode": false,
          "operation": 1,
          "rdsInstance": {
            "rdsEngineType": "mysql",
            "rdsEdition": "mysql",
            "rdsInstanceSpec": {
              "dbInstanceClass": "db.t2.micro",
              "dbLicenseModel": "general-public-license",
              "dbEngineVersion": "5.7.19"
            },
            "rdsSetting": {
              "instanceIdentifier": "authdatabase",
              "masterUsername": "rdsuser",
              "masterPassword": "Test#123"
            },
            "rdsDBOptions": {
              "dbName": "authDatabase",
              "dbPort": 3306
            },
            "rdsInstanceArn": "arn:aws:rds:us-east-1:318300609668:db:authdatabase",
            "Host": "authdatabase.czndmdv7dw6d.us-east-1.rds.amazonaws.com",
            "doesExist": true
          },
          "rdsInstanceResources": [],
          "projectRegion": "us-east-1",
          "mode": 1,
          "additionalFiles": [],
          "params": {
            "query": "",
            "inserts": ""
          },
          "isGlobalEditMode": false,
          "enableInject": true,
          "isNewFromGlobal": false
        },
        "globallyEditable": true
      },
      "sqsanomalyDetectionQueue": {
        "name": "sqsanomalyDetectionQueue",
        "type": "SQS",
        "config": {
          "mode": 1,
          "existing": true,
          "name": "anomalyDetectionQueue",
          "url": "https://sqs.us-east-1.amazonaws.com/318300609668/anomalyDetectionQueue",
          "selectedRegion": "us-east-1",
          "deliveryDelay": "0",
          "deliveryDelayUnit": "seconds",
          "queueType": "standardQueue",
          "defaultVisibilityTimeout": "30",
          "defaultVisibilityTimeoutUnit": "seconds",
          "messageRetentionPeriod": "345600",
          "messageRetentionPeriodUnit": "seconds",
          "maximumMessageSize": 256,
          "receiveMessageWaitTime": "0",
          "queueARN": "arn:aws:sqs:us-east-1:318300609668:anomalyDetectionQueue"
        },
        "globallyEditable": false
      },
      "cognitotest": {
        "name": "cognitotest",
        "type": "CognitoIdentityServiceProvider",
        "config": {
          "mode": 1,
          "name": "test",
          "arn": "arn:aws:cognito-idp:us-east-1:318300609668:userpool/us-east-1_D10y3fy0o",
          "userPool": {
            "Id": "us-east-1_D10y3fy0o",
            "Name": "test",
            "LambdaConfig": {},
            "Policies": {
              "PasswordPolicy": {
                "MinimumLength": 8,
                "RequireUppercase": true,
                "RequireLowercase": true,
                "RequireNumbers": true,
                "RequireSymbols": true
              }
            },
            "AutoVerifiedAttributes": [
              "email"
            ],
            "SmsVerificationMessage": "Your verification code is {####}. ",
            "EmailVerificationMessage": "Your verification code is {####}. ",
            "EmailVerificationSubject": "Your verification code",
            "VerificationMessageTemplate": {
              "SmsMessage": "Your verification code is {####}. ",
              "EmailMessage": "Your verification code is {####}. ",
              "EmailSubject": "Your verification code",
              "DefaultEmailOption": "CONFIRM_WITH_CODE"
            },
            "SmsAuthenticationMessage": "Your authentication code is {####}. ",
            "MfaConfiguration": "OFF",
            "EmailConfiguration": {},
            "UserPoolTags": {},
            "AdminCreateUserConfig": {
              "AllowAdminCreateUserOnly": false,
              "UnusedAccountValidityDays": 7,
              "InviteMessageTemplate": {
                "SMSMessage": "Your username is {username} and temporary password is {####}. ",
                "EmailMessage": "Your username is {username} and temporary password is {####}. ",
                "EmailSubject": "Your temporary password"
              }
            },
            "SchemaAttributes": [
              {
                "Name": "sub",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": false,
                "Required": true,
                "StringAttributeConstraints": {
                  "MinLength": "1",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "name",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "given_name",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "family_name",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "middle_name",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "nickname",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "preferred_username",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "profile",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "picture",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "website",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "email",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": true,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "email_verified",
                "AttributeDataType": "Boolean",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false
              },
              {
                "Name": "gender",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "birthdate",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "10",
                  "MaxLength": "10"
                }
              },
              {
                "Name": "zoneinfo",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "locale",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "phone_number",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "phone_number_verified",
                "AttributeDataType": "Boolean",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false
              },
              {
                "Name": "address",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "updated_at",
                "AttributeDataType": "Number",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "NumberAttributeConstraints": {
                  "MinValue": "0"
                }
              }
            ]
          }
        },
        "globallyEditable": false
      },
      "snsusEast1dynamodb": {
        "name": "snsusEast1dynamodb",
        "type": "SNS",
        "config": {
          "topicMode": 1,
          "topicName": "dynamodb",
          "topicArn": "arn:aws:sns:us-east-1:318300609668:dynamodb",
          "topicRegion": "us-east-1",
          "snsType": 0,
          "subscriptions": []
        },
        "globallyEditable": true
      },
      "datastore": {
        "name": "datastore",
        "type": "datastore",
        "config": {},
        "globallyEditable": false
      }
    },
    "customTemplate": {
      "dialect": null,
      "definitions": {}
    },
    "envVariables": [
      {
        "lambdaId": "all",
        "varKey": "SIGMA_AWS_ACC_ID",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      },
      {
        "lambdaId": "all",
        "varKey": "GCP_SERVICE_ACCOUNT_KEY",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      },
      {
        "lambdaId": "all",
        "varKey": "GCP_PROJECT",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      }
    ],
    "packageJSON": {
      "dependencies": {
        "slappforge-sdk-aws": {
          "name": "slappforge-sdk-aws",
          "version": "0.0.5",
          "dev": false,
          "notRemovable": false
        },
        "aws-sdk": {
          "name": "aws-sdk",
          "version": "2.176.0",
          "dev": true,
          "notRemovable": false
        },
        "googleapis": {
          "name": "googleapis",
          "version": "29.0.0",
          "dev": false,
          "notRemovable": false
        }
      }
    }
  },
  "PROJECT_META": {
    "projectName": "Retest-525",
    "projectDescription": "",
    "projectVersion": "1.0.0",
    "projectRegion": "us-east-1",
    "platform": "AWS",
    "platformRegions": {},
    "lastSave": 1549623895008
  },
  "VCS_STATE": {
    "provider": "GitHub",
    "repo": {
      "name": "Retest-525",
      "url": "https://github.com/Kumudikatest/Retest-525"
    }
  }
}